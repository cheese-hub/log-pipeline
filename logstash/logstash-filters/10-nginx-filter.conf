#filter {
#  grok {
#    match => { "message" => ["%{GREEDYDATA:message}"] }
#  }
#}


filter {
   grok {
     match => { "message" => ["%{IPORHOST:remote_ip} - %{DATA:user_name} \[%{HTTPDATE:time}\] \"%{WORD:method} /api/(?<event>(start|stop))/%{USERNAME:application_id} HTTP/%{NUMBER:http_version}\" %{NUMBER:response_code} %{NUMBER:bytes} \"%{DATA:referrer}\" \"%{DATA:agent}\"",
     "%{HOSTNAME:S3Request} %{TIME:Timestamp}       %{DATA:server} Event\(%{DATA:version}\{Kind\:\"%{DATA:kind}\", Namespace\:\"%{USERNAME:Username}\"\, Name\:\"%{DATA:application_id}-%{DATA:ApplicationName}-%{DATA:ingress}\"\, UID\:\"%{DATA:uid}\"\, APIVersion\:%{DATA:rest}\)\: type\: \'%{DATA:type}\' reason\: \'%{USERNAME:event}\' %{GREEDYDATA:message}"]}
     remove_field => "message"
   }
   geoip {
     source => "clientip"

   }
   if "_grokparsefailure" in [tags] {
     drop{}
   }
   mutate { remove_field => ["path", "http_version", "bytes", "_host","host", "response_code", "user_name", "@version", "kind", "version", "ingress", "rest", "S3Request", "type", "server", "referrer", "method", "agent"] }

   

}
